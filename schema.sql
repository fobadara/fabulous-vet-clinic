/* Database schema to keep the structure of entire database. */

CREATE TABLE animals (
    id INT GENERATED BY DEFAULT AS IDENTITY,
     name VARCHAR(100),
     date_of_birth DATE,
     escape_attempts INT,
     neutered BOOLEAN,
     weight_kg DECIMAL,
     PRIMARY KEY(id)
);

/* Add a species column of type string */
ALTER TABLE animals 
ADD COLUMN species VARCHAR(100);

-- Create a table named owners with the following columns:
-- id: integer (set it as autoincremented PRIMARY KEY), full_name: string, age: integer
CREATE TABLE owners(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY,
  full_name VARCHAR(100) NOT NULL,
  age INTEGER,
  PRIMARY KEY(id)
);

-- Create a table named species with the following columns:
-- id: integer (set it as autoincremented PRIMARY KEY), name: string
CREATE TABLE species(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR(100) NOT NULL,
  PRIMARY KEY(id)
);

-- Modify animals table:
-- Make sure that id is set as autoincremented PRIMARY KEY
ALTER TABLE animals
ALTER COLUMN id 
ADD GENERATED BY DEFAULT AS IDENTITY;

-- Remove column species
ALTER TABLE animals
DROP COLUMN species;

-- Add column species_id which is a foreign key referencing species table
ALTER TABLE animals
ADD COLUMN species_id INT REFERENCES species(id);

-- Add column owner_id which is a foreign key referencing the owners table
ALTER TABLE animals
ADD COLUMN owner_id INT REFERENCES owners(id);

-- Create a table named vets with the following columns:
-- id: integer (set it as autoincremented PRIMARY KEY)
-- name: string
-- age: integer
-- date_of_graduation: date
CREATE TABLE vets(
  id BIGSERIAL PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  age INTEGER,
  date_of_graduation DATE
);
-- There is a many-to-many relationship between the tables species and vets: a vet can specialize in multiple species, and a species can have multiple vets specialized in it. 
-- Create a "join table" called specializations to handle this relationship.
CREATE TABLE specializations (
  species_id BIGINT REFERENCES species(id),
  vets_id BIGINT REFERENCES vets(id)
);

-- There is a many-to-many relationship between the tables animals and vets: an animal can visit multiple vets and one vet can be visited by multiple animals. 
-- Create a "join table" called visits to handle this relationship, it should also keep track of the date of the visit.
CREATE TABLE visits (
  animals_id BIGINT REFERENCES animals(id),
  vets_id BIGINT REFERENCES vets(id),
  date_of_visit DATE
);


-- Add an email column to your owners table
ALTER TABLE owners ADD COLUMN email VARCHAR(120);

-- Create clustered indexing to speed up the search of visited animals
CREATE INDEX visits_animals_asc ON visits(animals_id ASC)
-- Create clustered indexing to speed up the search of visiting vets
CREATE INDEX visits_vets_desc ON visits(vets_id DESC);
-- Create clustered indexing to speed up the search of owner's email
CREATE INDEX owners_email_DESC ON owners(email DESC);